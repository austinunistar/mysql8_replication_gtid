---
- hosts: mysql-1
  become: true
  tasks:
  - name: configure a MySQL source server
    ansible.builtin.lineinfile:
      path: '/etc/mysql/mysql.conf.d/mysqld.cnf'
      regexp: 'log-error'
      line: "{{ item }}"
      backup: yes
    loop:
      - bind-address = 192.168.56.13
      - server-id = 1
      - log-bin = mysql-bin
      - binlog-do-db = test
      - gtid-mode = on
      - enforce-gtid-consistency
      - log-slave-updates

  - name: restart mysql service
    ansible.builtin.service:
      name: mysql
      state: restarted
      enabled: yes

- hosts: mysql-2
  become: true
  tasks:
  - name: configure a MySQL replica server
    ansible.builtin.lineinfile:
      path: '/etc/mysql/mysql.conf.d/mysqld.cnf'
      regexp: 'log-error'
      line: "{{ item }}"
      backup: yes
    loop:
      - bind-address = 192.168.56.14
      - server-id = 2 
      - log-bin = mysql-bin
      - gtid-mode = on
      - skip-slave-start
      - enforce-gtid-consistency
      - log-slave-updates

  - name: restart mysql service
    ansible.builtin.service:
      name: mysql
      state: restarted
      enabled: yes

- hosts: mysql-1
  become: true
  vars:
     root_password: 'finicast'
     mysql_root_pass: 'finicast'
     mysql_user_pass: 'repl'
     user: 'repl'
  tasks:
  - name: create a replication user on the MySQL source server
    ansible.builtin.shell: |
            mysql -uroot -p{{ mysql_root_pass }} -e "create user 'repl'@'192.168.56.14' identified by 'repl';"
    ignore_errors: yes

  - name: grant the user replication permissions
    ansible.builtin.shell: |
            mysql -uroot -p{{ mysql_root_pass }} -e "GRANT REPLICATION SLAVE ON *.* TO 'repl'@'192.168.56.14';"

  - name: reload the grant tables in the MySQL database
    ansible.builtin.shell: |
            mysql -uroot -p{{ mysql_root_pass }} -e "FLUSH PRIVILEGES;"

  - name: set the source server to the read_only state
    ansible.builtin.shell: |
            mysql -uroot -p{{ mysql_root_pass }} -e "SET @@GLOBAL.read_only = ON;"

- hosts: mysql-2
  become: true
  vars:
     root_password: 'finicast'
     mysql_root_pass: 'finicast'
     
  tasks:
  - name: configure the replication source
    ansible.builtin.shell: |
            mysql -uroot -p{{ mysql_root_pass }} -e "change master to master_host='192.168.56.13',master_user='repl',master_password='repl',master_auto_position=1;"

  - name: start the replica thread in the MySQL replica server
    ansible.builtin.shell: |
            mysql -uroot -p{{ mysql_root_pass }} -e "START SLAVE;"


- hosts: mysql-1
  become: true
  vars:
     root_password: 'finicast'
     mysql_root_pass: 'finicast'
  tasks:
  - name: create new database with test
    ansible.builtin.shell: |
            mysql -uroot -p{{ mysql_root_pass }} -e "create database test;"
    tags: test3
    ignore_errors: yes
